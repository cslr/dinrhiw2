#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass report
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle fancy

\layout Title

whiteice::algos documentation
\layout Author

Tomas Ukkonen
\newline 
<nop@.fi>
\layout Standard


\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Chapter

Basic Information
\layout Section

Introduction
\layout Standard

This C++ library (
\family typewriter 
whiteice
\family default 
) aims to contain most of the basic algorithms with special focus at information
 analysis and machine learning algorithms and mathematical algorithms supporting
 those libraries.
 This library contains implementation of basic data structures and algorithms,
 linear algebra and symmetric cryptography.
 These include feedforward neural network, PCA, ICA, SOM and machine learning
 related helper functions/classes.
 
\layout Standard

In the future aim of the library is to develop statistics, optimization,
 recurrent NN, parameteric and non-parametric bayesian inference and datamining
 algoritms.
 I have also plans to support for basic non-deterministic finite automata
 based language regocnization and other language theory based pattern recognizat
ion code.
\layout Subsection

Relation to other 
\family typewriter 
whiteice::*
\family default 
 libraries in development and status of libraries
\layout Standard

Reason for this section is to clarify where each functionality is (will
 be) implemented to and where one can find needed functionalities.
 The latest update to the reported status of libraries was made on 13th
 Jan 2004.
\layout Itemize

DLIB (
\family typewriter 
whiteice::dlib
\family default 
) library has loadable objects, basic 2d graphics, x86 cpu identification
 code.
 [90%]
\layout Itemize

Functionality of 
\family typewriter 
whiteice
\family default 
 library has been descrined in the previous section.
 [basic parts: 90%, planned additions 0%]
\layout Itemize

CNDI (
\family typewriter 
whiteice::cndi
\family default 
) will be CORBA based dynamic directory and naming services.
 CNDI will use 
\family typewriter 
whiteice::dlib
\family default 
s loadable objects support to add loadable services/objects.
 CNDI will be used for message passing based communication between processes.
 [20%]
\layout Itemize

Digisense (
\family typewriter 
whiteice::digisense)
\family default 
 daemon and c++ interface library provide uniform access to input data streams
 for analysis (primaly audio and video).
\layout Itemize

Silence DSP (
\family typewriter 
whiteice::silence
\family default 
).
 Utility/library will have digital signal processing code: FFT, spectral
 analysis, adaptive and optimum (wiener, kalman) FIR filters.
 Discrete wavelet transform.
 High-level 
\family typewriter 
whiteice::algos
\family default 
 code will use silence DSPs routines for feature generation.
 [10%]
\layout Itemize


\begin_inset Quotes eld
\end_inset 

graffa
\begin_inset Quotes erd
\end_inset 

 (
\family typewriter 
whiteice::zeno
\family default 
).
 Graffa is half working 3D OpenGL engine will have be merged with dlib and
 except for interface and non-core functionality etc.
 will be repleased/use Crystal Space which supports both OpenGL and DirectX
 and is LGPL library.
 Graffa will be fully controllable through CNDI.
 [60%]
\layout Itemize

Machine learning AI (
\family typewriter 
whiteice::translogic
\family default 
) this is in early planning state thought parts of it has been already implement
ed.
 This is very experimental project where parts of the needed theory is just
 being formulated (small scale private research made by me).
 If I will implement any traditional AI code (logic-based, A* / DFS-search)
 it will be also included here.
 [0%]
\layout Subsection

External libraries
\layout Standard

This library depends on following third party (open source) libraries.
\layout Itemize

ELF dynamic linker library (ld.so) [BSD-style license]
\layout Itemize

GNU C Library [GNU LGPL]
\layout Itemize

GNU C++ libstdc++ v3 library [runtime GPL]
\layout Itemize

zlib compression library [BSD-style license]
\layout Itemize

ATLAS (Automatically Tuned Linear Algebra Software) [BSD-style license]
\layout Itemize

GNU MP Bignum library [GNU LGPL]
\layout Itemize

DLIB (
\family typewriter 
whiteice::dlib
\family default 
) library [GNU LGPL] (**REMOVE ME**)
\layout Subsection

Status of this document
\layout Standard

Documentation is finally unfinished.
\layout Section

Classes
\layout Subsection

whiteice::algos - basic data types and algorithms
\layout Standard

<UML DIAGRAM>
\layout Subsubsection

container <interface>
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Container is generic interface for classes containing items.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Itemize

size() - returns number of items in a container
\layout Subsubsection

array <interface> : container
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Array is generic interface for array operations.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Itemize

bool resize(int) resizes array and returns true.
 returns false otherwise
\layout Itemize

D& operator[](int) accesses element, may fail by throwing out_of_range exception
\layout Subsubsection

stack <interface> : container
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Stack is generic interface for classes that supports stack operations.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Itemize

bool push(const D&) pushes value to stack and returns true, otherwise returns
 false
\layout Itemize

D pop() pops value from stack and returns it.
 If stack is empty throws logic_error exception.
\layout Subsubsection

queue <interface> : container
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Queue is interface for classes implementing queue operations.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Itemize

bool enqueue(const D&) returns true if value has been succesfully put to
 queue.
\layout Itemize

D dequeue() returns false if value has been succesfully removed from queue.
 If queue is empty throws logic_error exception.
\layout Subsubsection

hash_table <interface> : container
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Hash_table is interface for classes supporting hash operations.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

NOT USED
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Itemize

a
\layout Subsubsection

tree <interface> : container
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Tree is interface for classes implementing tree operations.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

NOT USED
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

printable <interface>
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Interface for classes that are printable to text format and back.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Itemize

bool print() prints description of this object's data to stdio/cout and
 returns true.
 If printing fails false will be returned
\layout Standard

TO BE ADDED TO THE NEXT VERSION INTERFACE
\layout Itemize

bool print(std::string&) prints description of this object's data to given
 string and returns true.
 If something fails returns false.
 - string may have been changed.
\layout Itemize

bool ascii_encode(std::string&) throw() encodes object to ascii string and
 returns true.
 If encoding fails returns false, string may have been changed.
\layout Itemize

bool ascii_decode(const std::string&) throw() replaces objects data from
 the data decoded from ascii string and returns true.
 If decoding fails returns false and don't change objects data.
\layout Subsubsection

static_array : array
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Static array is array which doesn't support resizing.
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

TESTED/OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

dynamic_array : array, queue, stack
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Dynamic array is dynamically growing array
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

TESTED / OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Standard

Also supports also queue and stack operations.
\layout Subsubsection

augmented_data
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

Augments data to (key, data) data structure
\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

NOT TESTED
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Standard

Augmented data is template class which augments data to (key, data) data
 structure and implements comparisision operations based on key value.
\layout Subsubsection

chain_hash : hash_table
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

NOT TESTED
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

priority_queue
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

THIS VERSION NOT TESTED
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

radix_sort
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

TESTED / OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

fast_radix
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

TESTED / OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

binary_tree : tree
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

NOT USED
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

rbtree : tree
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

THIS VERSION NOT TESTED / OK?
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

rbnode
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

OK
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsubsection

training_set
\layout Standard


\begin_inset  Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0pt">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0pt">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Description
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

\end_inset 
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\layout Standard

Status
\end_inset 
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\layout Standard

NOT TESTED
\end_inset 
</cell>
</row>
</lyxtabular>

\end_inset 


\layout Subsection

whiteice::algos - math
\layout Standard

<UML DIAGRAM>
\layout Subsection

whiteice::algos - statistics
\layout Standard

<UML DIAGRAM>
\layout Subsection

whiteice::algos - symmetric cryptography
\layout Standard

<UML DIAGRAM>
\layout Subsection

whiteice::algos - neuralnetwork
\layout Standard

<UML DIAGRAM>
\layout Subsection

whiteice::algos - graph
\layout Standard

<UML DIAGRAM>
\layout Subsection

whiteice::algos - automata
\layout Standard

<UML DIAGRAM>
\layout Subsection

whiteice::algos - exceptions
\layout Standard

<UML DIAGRAM>
\layout Section

Functions
\the_end
