#summary Example of a simple machine learning task

== Machine Learning Step By Step Example ==

Here I'm going to give step-by-step instructions how to do simple machine learning task using dinrhiw tools: *dstool* and *nntool*.

First compile and install library and tools: 
{{{
autoconf; ./configure; make; make makelib; su; make install; exit;
}}} 

and 

{{{ 
cd tools; make all; su; make install; exit;
}}}

After this, lets get some data from UCI machine learning repository http://archive.ics.uci.edu/ml/.

Specifically, we are going to do machine learning to predict wine quality of different wines based on measurements: https://archive.ics.uci.edu/ml/datasets/Wine+Quality.

{{{
wget http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-white.csv
}}}

The data looks good but requires some preprocessing in order for import of data to the tool chain works. For preprocessing we are going to use perl and write a short script that divides data into 1) input and output files, 2) removes initial labels and 3) removes separators between numbers.

{{{
#!/usr/bin/perl

open(MYFILE, 'winequality-white.csv');
open(OUT, ">winequality.out");
open(IN, ">winequality.in");

$firstLine = <MYFILE>;

while (<MYFILE>) {
    chomp;
    @words = split(";", $_);
    
    for my $i (0 .. $#words - 1){
	print IN "@words[$i] ";
    }
    print IN "\n";    
    print OUT "@words[$#words]\n";
}

close(MYFILE);
close(OUT);
close(IN);
}}}

OK. That was simple but not totally straight-forward to write but once you have write few of these conversion scripts they are simple variations of each other.

Now we have two files *winequality.in* and *winequality.out*. The first one contains input variables of our problem and the other one the corresponding output values (wine quality).

The next things we are going to do is to use *dstool* to import the data into binary format *nntool* can use and do some simple preprocessing for data in order for it to have correct range ~[-1,1] when using neural network.
